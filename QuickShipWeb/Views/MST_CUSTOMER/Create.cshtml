@model QuickShipWeb.Models.MST_CUSTOMER

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout3.cshtml";
}

<h2>Create</h2>
   
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
        
    <div class="form-horizontal">
        <h4>Create New Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control",
                    placeholder =  "HNxxxx01" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control",
               placeholder = "Bưu Điện Hà Nội" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control",
                    placeholder = "Bờ Hồ, Hoàn Kiếm, Hà Nội" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PIC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PIC, new { htmlAttributes = new { @class = "form-control",
                    placeholder = "Nguyễn Xuân Phúc" } })
                @Html.ValidationMessageFor(model => model.PIC, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-phone-alt"></span>
                </span>
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control",
                    placeholder = "84982123123" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control",
                    placeholder = "nguyenvana@gmail.com" } })
                <span class="input-group-addon">@@</span>
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Remove class="form-group" to clear space(high) of this div*@
        <div>
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new {  @class = "hidden"  })
            <div class="input-group">@Html.CheckBoxFor(model => model.IsActive,
                                    new { @class = "hidden", @checked = "checked" })</div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZoneId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.Created_By, htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created_By, new { htmlAttributes = new { @class = "hidden", @Value = "tester" } })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.Modified_By, htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modified_By, new { htmlAttributes = new { @class = "hidden", @Value = "tester" } })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.Created_Date, htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created_Date, new { htmlAttributes = new { @class = "hidden", @Value = DateTime.Now } })
            </div>
        </div>
        <div>
            @Html.LabelFor(model => model.Modified_Date, htmlAttributes: new { @class = "hidden" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Modified_Date, new { htmlAttributes = new { @class = "hidden", @Value = DateTime.Now } })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div class="btn-group">
                    <button type="submit" class="btn btn-primary btn-sm">Save</button>
                    <button type="button" class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><a href="#" id="savenew">Save & New</a></li>
                        <li class="divider"></li>
                        <li><a href="#" id="duplicate">Duplicate</a></li>
                    </ul>
                </div>
            </div>
        </div>
        
        <h4 id="progressbarTitle">Basic Progressbar</h4>
        <div class="progress progress-striped active">
@*        <div class="progress">*@
            @*progress-bar-""/success/info/warning/danger*@
            @*<div class="progress-bar" role="progressbar" aria-valuenow="80"
                 aria-valuemin="0" aria-valuemax="100" style="width: 80%;">
                <span class="sr-only">x% Complete</span>
                text here x%
            </div>*@
            <div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100"
                 id="start"></div>
        </div>
        <button type="button" id="start" class="btn btn-primary btn-sm">Save</button>
        @*dynamically updating the progress bar's percentage page71*@

        <div class="alert alert-success alert-dismissible" @*role="alert"*@>
            <button type="button" class="close" data-dismiss="alert">
                <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
            </button>
            <strong>Success. You have successfully save the file.</strong>
        </div>
        <div class="alert alert-info"><strong>Info. Something has just happened.</strong></div>
        <div class="alert alert-warning"><strong>Warning! The file size is too big.</strong></div>
        <div class="alert alert-danger"><strong>Danger! The file could not be saved.</strong></div>
    </div>
}
    
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" language="javascript">
        $("#start").click(function () {
            $(".progress-bar").width('0%');
            var progressNotifier = $.connection.progressbarHub;
            progressNotifier.client.sendMessage = function (message) {
                updateProgress(message);
            };

            $.connection.hub.start().done(function () {
                progressNotifier.server.sendProgress();
            });
        });

        function updateProgress(message) {
            $(".progress-bar").width(message);
            $("#progressbarTitle").html(message + ' Complete');
        }
</script>
}